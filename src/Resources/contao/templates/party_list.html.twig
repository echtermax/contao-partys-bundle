{# src/Resources/views/party_list.html.twig #}

{% if parties|length > 0 %}
    <div class="container my-4">
        <div id="customAlert" class="alert alert-info text-center" style="display: none" role="alert"></div>
        <div class="row row-cols-1 g-4">
            {% for party in parties %}
                <div class="col party-item" data-response="{{ party.userResponse|default('pending') }}">
                    <div class="card shadow-sm">
                        <div class="card-body position-relative">
                            <button type="button" class="btn btn-sm btn-outline-secondary position-absolute top-0 end-0 mt-2 me-2 group-icon" 
                                    data-bs-toggle="modal" data-bs-target="#partyAttendeesModal{{ party.id }}">
                                <i class="bi bi-people-fill"></i>
                            </button>
                            
                            <h5 class="card-title">{{ party.title }}</h5>
                            
                            <div class="mb-3">
                                <p class="mb-1">
                                    <strong>Datum:</strong> {{ party.startDate }}{% if party.endDate %} bis {{ party.endDate }}{% endif %}
                                    {% if party.startTime %}<strong>Beginn:</strong> {{ party.startTime }} Uhr{% endif %}
                                </p>
                                
                                {% if party.location %}
                                    <p class="mb-1"><strong>Ort:</strong> {{ party.location }}</p>
                                {% endif %}
                            </div>
                            
                            {% if party.description %}
                                <div class="card-text">{{ party.description|raw }}</div>
                            {% endif %}
                            
                            {% if party.userResponse is defined and party.userResponse is not empty %}
                                <div class="party-status alert {% if party.userResponse == 'accept' %}alert-success{% else %}alert-danger{% endif %} mt-2 mb-2">
                                    {% if party.userResponse == 'accept' %}
                                        <i class="bi bi-check-circle-fill me-2"></i>Sie haben zugesagt
                                    {% else %}
                                        <i class="bi bi-x-circle-fill me-2"></i>Sie haben abgesagt
                                    {% endif %}
                                </div>
                            {% endif %}
                        </div>
                        
                        <div class="card-footer p-0">
                            <div class="d-flex">
                                {% if party.userResponse is not defined %}
                                    <button type="button" title="Party zusagen" data-action="accept" data-party-id="{{ party.id }}" data-url="{{ path('accept_party_invite', { id: party.id }) }}" class="btn btn-success flex-fill rounded-0 party-action-btn">
                                        <i class="bi bi-hand-thumbs-up"></i>
                                    </button>
                                    <button type="button" title="Party absagen" data-action="decline" data-party-id="{{ party.id }}" data-url="{{ path('decline_party_invite', { id: party.id }) }}" class="btn btn-danger flex-fill rounded-0 party-action-btn">
                                        <i class="bi bi-hand-thumbs-down"></i>
                                    </button>
                                    
                                {% elseif party.userResponse == 'accept' %}
                                    <button type="button" title="Party absagen" data-action="decline" data-party-id="{{ party.id }}" data-url="{{ path('decline_party_invite', { id: party.id }) }}" class="btn btn-outline-danger flex-fill rounded-0 party-action-btn">
                                        <i class="bi bi-arrow-repeat me-1"></i>
                                        <i class="bi bi-hand-thumbs-down"></i>
                                    </button>
                                    
                                {% elseif party.userResponse == 'decline' %}
                                    <button type="button" title="Party zusagen" data-action="accept" data-party-id="{{ party.id }}" data-url="{{ path('accept_party_invite', { id: party.id }) }}" class="btn btn-outline-success flex-fill rounded-0 party-action-btn">
                                        <i class="bi bi-arrow-repeat me-1"></i>
                                        <i class="bi bi-hand-thumbs-up"></i>
                                    </button>
                                {% endif %}
                                
                                <a href="{{ path('download_party_ics', { id: party.id }) }}" target="_blank" title="Zu Kalender hinzufügen" class="btn btn-primary flex-fill rounded-0">
                                    <i class="bi bi-calendar-plus me-2"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="modal fade" id="partyAttendeesModal{{ party.id }}" tabindex="-1" aria-labelledby="partyAttendeesModalLabel{{ party.id }}" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="partyAttendeesModalLabel{{ party.id }}">Teilnehmerliste: {{ party.title }}</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Schließen"></button>
                            </div>
                            <div class="modal-body">
                                <div class="attendees-loading text-center d-none">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Laden...</span>
                                    </div>
                                    <p class="mt-2">Teilnehmerdaten werden geladen...</p>
                                </div>
                                <div class="attendees-content" data-party-id="{{ party.id }}">
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Schließen</button>
                            </div>
                        </div>
                    </div>
                </div>
            {% endfor %}
            <button type="button" class="btn btn-info rounded-circle position-fixed bottom-0 end-0 m-4 z-3 d-flex justify-content-center align-items-center p-0" style="width:64px; height:64px;" data-bs-toggle="modal" data-bs-target="#filterModal">
                <i id="filterIcon" class="bi bi-funnel fs-3"></i>
            </button>
            
            <div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <div class="modal-content">
                        <div class="modal-header bg-info text-white border-0">
                            <h5 class="modal-title flex-grow-1 text-center fw-bold" id="filterModalLabel">
                                Filter anzeigen
                            </h5>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Schließen"></button>
                        </div>
                        <div class="modal-body py-4">
                            <div class="form-check form-switch mb-3">
                                <input class="form-check-input filter-option" type="checkbox" value="pending" id="filterPending">
                                <label class="form-check-label" for="filterPending">Nicht geantwortet</label>
                            </div>
                            <div class="form-check form-switch mb-3">
                                <input class="form-check-input filter-option" type="checkbox" value="accept" id="filterAccepted">
                                <label class="form-check-label" for="filterAccepted">Zugesagt</label>
                            </div>
                            <div class="form-check form-switch mb-3">
                                <input class="form-check-input filter-option" type="checkbox" value="decline" id="filterDeclined">
                                <label class="form-check-label" for="filterDeclined">Abgesagt</label>
                            </div>
                        </div>
                        <div class="modal-footer justify-content-between border-0">
                            <button type="button" class="btn btn-outline-secondary" id="resetFilters">Zurücksetzen</button>
                            <button type="button" class="btn btn-info" id="applyFilters" data-bs-dismiss="modal">Anwenden</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% else %}
    <div class="container my-5">
        <div class="alert alert-info text-center" role="alert">
            Derzeit sind keine Veranstaltungen geplant.
        </div>
    </div>
{% endif %}

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
        
        const partyButtons = document.querySelectorAll('.party-action-btn');
        
        partyButtons.forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                
                const url = this.getAttribute('data-url');
                const partyId = this.getAttribute('data-party-id');
                const button = this;
                
                button.disabled = true;
                
                fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({ partyId: partyId })
                })
                .then(response => response.json())
                .then(data => {
                    button.disabled = false;
                    
                    if (data.success) {
                        const card = button.closest('.card');
                        const feedbackDiv = document.createElement('div');
                        feedbackDiv.className = 'alert alert-success mt-2';
                        feedbackDiv.textContent = data.message;
                        
                        card.querySelector('.card-body').appendChild(feedbackDiv);
                        
                        const allButtons = card.querySelectorAll('.party-action-btn');
                        allButtons.forEach(btn => {
                            btn.disabled = true;
                        });
                        
                        setTimeout(() => {
                            feedbackDiv.remove();
                            location.reload();
                        }, 2000);
                    } else {
                        alert(data.message || 'Es ist ein Fehler aufgetreten.');
                    }
                })
                .catch(error => {
                    button.disabled = false;
                    console.error('Fehler:', error);
                    alert('Es ist ein Fehler bei der Verarbeitung der Anfrage aufgetreten.');
                });
            });
        });
        
        const modals = document.querySelectorAll('[id^="partyAttendeesModal"]');
        
        modals.forEach(modal => {
            modal.addEventListener('show.bs.modal', function() {
                const attendeesContent = this.querySelector('.attendees-content');
                const loadingIndicator = this.querySelector('.attendees-loading');
                const partyId = attendeesContent.getAttribute('data-party-id');
                
                attendeesContent.innerHTML = '';
                loadingIndicator.classList.remove('d-none');
                
                fetch(window.location + 'party/attendees/' + partyId, {
                    method: 'GET',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    loadingIndicator.classList.add('d-none');
                    
                    if (data.success) {
                        let html = '<div class="attendees-list">';
                        
                        if (data.accepted.length > 0) {
                            html += '<h6 class="mt-3">Zugesagt:</h6>';
                            html += '<ul class="list-group mb-3">';
                            data.accepted.forEach(member => {
                                html += `<li class="list-group-item text-success"><i class="bi bi-check-circle-fill me-2"></i>${member.name}</li>`;
                            });
                            html += '</ul>';
                        }
                        
                        if (data.declined.length > 0) {
                            html += '<h6 class="mt-3">Abgesagt:</h6>';
                            html += '<ul class="list-group mb-3">';
                            data.declined.forEach(member => {
                                html += `<li class="list-group-item text-danger"><i class="bi bi-x-circle-fill me-2"></i>${member.name}</li>`;
                            });
                            html += '</ul>';
                        }
                        
                        if (data.pending.length > 0) {
                            html += '<h6 class="mt-3">Ausstehend:</h6>';
                            html += '<ul class="list-group mb-3">';
                            data.pending.forEach(member => {
                                html += `<li class="list-group-item text-muted"><i class="bi bi-question-circle-fill me-2"></i>${member.name}</li>`;
                            });
                            html += '</ul>';
                        }
                        
                        html += '</div>';
                        attendeesContent.innerHTML = html;
                    } else {
                        attendeesContent.innerHTML = '<div class="alert alert-danger">Fehler beim Laden der Teilnehmerdaten.</div>';
                    }
                })
                .catch(error => {
                    loadingIndicator.classList.add('d-none');
                    attendeesContent.innerHTML = '<div class="alert alert-danger">Fehler beim Laden der Teilnehmerdaten.</div>';
                    console.error('Fehler:', error);
                });
            });
        });
        
        function applyFilters() {
            const checked = Array.from(document.querySelectorAll('.filter-option:checked')).map(cb => cb.value);
            const filterIcon = document.getElementById('filterIcon');
            const alert = document.getElementById('customAlert');
            let displayCounter = 0;
            document.querySelectorAll('.party-item').forEach(item => {
                const status = item.getAttribute('data-response');
                item.style.display = (checked.includes(status) || checked.length === 0) ? '' : 'none';
                if (item.style.display !== 'none') displayCounter++;
            });
            if (checked.length === 0 || checked.length === Array.from(document.querySelectorAll('.filter-option')).map(cb => cb.value).length) {
                if (filterIcon.classList.contains('bi-funnel-fill')) filterIcon.classList.replace('bi-funnel-fill', 'bi-funnel')
            } else {
                if (filterIcon.classList.contains('bi-funnel')) filterIcon.classList.replace('bi-funnel', 'bi-funnel-fill')
            }
            console.log(displayCounter)
            if (displayCounter === 0) {
                alert.style.display = 'block';
                alert.innerText = "Es wurden keine Partys gefunden, die den Filterkriterien entsprechen.";
            } else {
                alert.style.display = 'none';
                alert.innerText = "";
            }
        }
        
        function resetFilters() {
            document.querySelectorAll('.filter-option').forEach(cb => cb.checked = false);
            applyFilters();
        }
        
        document.getElementById('applyFilters').addEventListener('click', applyFilters);
        document.getElementById('resetFilters').addEventListener('click', resetFilters);
    });
</script>